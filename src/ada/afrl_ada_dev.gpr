with "xmlada";
with "zmq.gpr";
with "lmcp_generated_messages.gpr";

project AFRL_Ada_Dev is

   for Create_Missing_Dirs use "True";

   for Languages use ("Ada");

   for Source_Dirs use
     ("src/**");

   for Exec_Dir use ".";

   for Main use ("uxas_ada.adb");

   type Modes is ("debug", "release", "gcov");
   App_Mode : Modes := external ("APP_MODE", "release");

   for Object_Dir use "objs/" & App_Mode;

   Style_Flags := ("-gnaty3aehiIklnOprstux");

   Debug_Flags :=
     ("-gnata",   -- enable assertions of all kinds
      "-gnatwa",  -- enable all the usual warnings (but not absolutely all)
      "-gnateA",  -- check for overlapping actual parameters
      "-g",       -- include symbols etc used for debugging
      "-O0");     -- don't optimize at all, for sake of debugging

   GCOV_Flags := ("-fprofile-arcs", "-ftest-coverage");

   Release_Flags := ("-O2",                  -- optimize a lot (but not absolutely all possible)
                     "-gnatn",               -- inline across units (moderate, since we're using -O2)
                     "-gnatp",               -- don't generate runtime checks
                     "-fdata-sections",      -- data go into separate sections
                     "-ffunction-sections"); -- routines go into separate sections

   package Naming is

      for Specification ("Ctrl_C_Handler") use "ctrl_c_handler.ads";

      case App_Mode is
         when "gcov"              =>
            for Implementation ("Ctrl_C_Handler") use "ctrl_c_handler__gcov.adb";
         when "debug" | "release" =>
            for Implementation ("Ctrl_C_Handler") use "ctrl_c_handler__dummy.adb";
      end case;
   end Naming;

   package Builder is
      for Executable ("uxas_ada.adb") use "uxas-ada";

      case App_Mode is
         when "release"        =>
            for Default_Switches ("ada") use ("-j2");
         when "debug" | "gcov" =>
            for Default_Switches ("ada") use ("-g", "-j2");
      end case;
   end Builder;

   package Linker is
      case App_Mode is
         when "gcov"              =>
            for Default_Switches ("ada") use ("-Wl,--gc-sections") & GCOV_Flags;
         when "debug" | "release" =>
            for Default_Switches ("ada") use ("-Wl,--gc-sections");
      end case;
   end Linker;

   package Compiler is
      case App_Mode is
         when "debug"   =>
            for Default_Switches ("ada") use Style_Flags & Debug_Flags;
         when "gcov"    =>
            for Default_Switches ("ada") use Style_Flags & Debug_Flags & GCOV_Flags;
         when "release" =>
            for Default_Switches ("ada") use
              ("-O2",
               "-gnatn",
               "-gnatp",
               "-fdata-sections",
               "-ffunction-sections",
               "-gnatwa");
            for Default_Switches ("ada") use Style_Flags & Release_Flags;
      end case;
   end Compiler;

   package Pretty_Printer is
      for Switches ("ada") use ("-nM", "--no-separate-loop-then", "-M120");
   end Pretty_Printer;

   package Prove is
      for Proof_Switches ("Ada") use ("-j0", "--counterexamples=off", "-u", "--output=brief");
      for Proof_Dir use "proof";
   end Prove;

end AFRL_Ada_Dev;
